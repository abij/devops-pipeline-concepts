# Azure DevOps pipeline with multiple examples embedded.
# Pipeline key concepts are explained here: https://learn.microsoft.com/azure/devops/pipelines/get-started/key-pipelines-concepts

# Using the default filename 'azure-pipelines.yml' will auto-register the pipeline in Azure DevOps.
# If you want to use a different filename, you will need to register the pipeline manually.

# Triggers: when to automatically run the pipeline.
# This support Continuous Integration (CI) and Continuous Delivery (CD) scenarios.
# We will manually trigger the pipeline from Azure DevOps
trigger: none  


# Optionally Run examples:
parameters:
  - name: variables
    displayName: Run variables examples
    type: boolean
    default: false
  - name: job_types
    displayName: Run Job types examples
    type: boolean
    default: false
  - name: agentless
    displayName: Run Agentless examples
    type: boolean
    default: false
  - name: git
    displayName: Run Git examples
    type: boolean
    default: false
  - name: azure_cli
    displayName: Run Azure CLI examples
    type: boolean
    default: false


# Root pool selects the default for all stages and jobs
pool:
  # Uses the MS-hosted agents: https://learn.microsoft.com/azure/devops/pipelines/agents/hosted  
  # - Installed Software: https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
  # other hosted agents: 'windows-latest' or 'macOS-latest'
  #
  # Alternative use a 'self-hosted' agent inside your own network or with custom software installed.
  vmImage: 'ubuntu-latest'  


# Various types of variables can be defined here.
variables:
  # Pointer to a local file:
- template: templates\global-vars.yml
  # Pointer to a pipeline library (variable-group) in DevOps.
- group: lookup-variables
  # Inline variables:
- name: runtimeVar
  value: $[variables['var1-in-group']] # key inside group: lookup-variables
- name: overwriteVar
  value: 'top level'
- name: azure_service_connection
  value: arm-example-conn


# Stages are the major divisions in a pipeline.
# Each stage can have multiple jobs.
# Stage is a block in the DevOps UI.
stages:
- ${{ if eq(parameters.variables, true) }}:
  - template: templates\1-variables.yml
- ${{ if eq(parameters.job_types, true) }}:
  - template: templates\2-job-types.yml
- ${{ if eq(parameters.agentless, true) }}:
  - template: templates\3-agentless.yml
- ${{ if eq(parameters.git, true) }}:
  - template: templates\4-git.yml
- ${{ if eq(parameters.azure_cli, true) }}:
  - template: templates\5-azure-cli.yml

# TODO: Add examples for the following:
# Resources: https://docs.microsoft.com/azure/devops/pipelines/process/resources?view=azure-devops&tabs=schema
# Logging & Extensions: https://docs.microsoft.com/azure/devops/pipelines/scripts/logging-commands
# Conditions: https://docs.microsoft.com/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml