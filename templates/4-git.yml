# This template will interact with GIT.
#
# In this example we update the README.md file.
# The file is updated with the buildId of the current build.
# The build will create a new commit and push it to the remote repository.
# Important to include in commit message: [skip ci], to prevent a new build to be triggered.
# 
# Other examples to commit and push code:
#   - After pre-commit hooks (only: auto fixed issues)
#   - Source code formatting
#   - Terraform fmt
#   - Automatic changelog
#   - Generated documentation
#   - Automatic bump versioning

stages:
- stage: s4
  displayName: Git (s4)
  dependsOn: []  # start immediately

  jobs:
  - job: j1
    displayName: Update README

    steps:
    # 'self' refers to the repo which contains the pipeline.yml file.
    # You can reference this template from other repositories.
    - checkout: self
      persistCredentials: true  # allow build agent to push code.
      fetchDepth: 0  
      # fetch all commits and branches
      # https://learn.microsoft.com/azure/devops/pipelines/yaml-schema/steps-checkout?view=azure-pipelines#shallow-fetch

    - script: |
        set -e
        git checkout $(Build.SourceBranchName)
        git config --global user.email "no-reply@azure-devops.com"
        git config --global user.name "Azure DevOps"
      displayName: Git config
      
    - script: sed -Ei 's/(Auto-update by pipeline:).*/\1 last buildId $(Build.BuildId)/g' README.md
      displayName: Set buildId README

    # Note: [skip ci] in the commit message will prevent a new build to be triggered.
    # https://learn.microsoft.com/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml#how-do-i-avoid-triggering-a-ci-build-when-the-script-pushes
    - script: | 
        git add README.md
        git commit -m "DevOps: update readme [skip ci]" 
        git push
      displayName: 'Git commit and push'